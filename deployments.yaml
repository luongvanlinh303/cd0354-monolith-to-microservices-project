apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: api-feed
  name: api-feed
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: api-feed
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: api-feed
    spec:
      containers:
        - env:
            - name: URL
              valueFrom:
                configMapKeyRef:
                  key: URL
                  name: env-config
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_BUCKET
                  name: env-config
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  key: AWS_PROFILE
                  name: env-config
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: env-config
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: env-config
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env-config
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env-config
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-secret
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USERNAME
                  name: env-secret
          image: vanlinh303/udagram-api-feed:v1
          imagePullPolicy: Always
          name: api-feed
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /root/.aws/
              name: aws-secret
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default-sa
      serviceAccountName: default-sa
      terminationGracePeriodSeconds: 30
      volumes:
        - name: aws-secret
          secret:
            defaultMode: 420
            secretName: aws-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: api-user
  name: api-user
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: api-user
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: api-user
    spec:
      containers:
        - env:
            - name: URL
              valueFrom:
                configMapKeyRef:
                  key: URL
                  name: env-config
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: env-config
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env-config
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env-config
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-secret
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USERNAME
                  name: env-secret
          image: vanlinh303/udagram-api-user:v1
          imagePullPolicy: Always
          name: api-user
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /root/.aws/
              name: aws-secret
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default-sa
      serviceAccountName: default-sa
      terminationGracePeriodSeconds: 30
      volumes:
        - name: aws-secret
          secret:
            defaultMode: 420
            secretName: aws-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: frontend
  name: frontend
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        api: external
        service: frontend
    spec:
      containers:
        - image: vanlinh303/udagram-frontend:v5
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default-sa
      serviceAccountName: default-sa
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: reverseproxy
  name: reverseproxy
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: reverseproxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: reverseproxy
    spec:
      containers:
        - image: vanlinh303/reverseproxy:v1
          imagePullPolicy: IfNotPresent
          name: reverseproxy
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default-sa
      serviceAccountName: default-sa
      terminationGracePeriodSeconds: 30
